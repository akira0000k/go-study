package main

import (
	"fmt"
	//"math/rand"
	"sync"
	//"sync/atomic"
	"time"
)

/*
 subject: channel buffer を使った　worker起動数制限の方法。チャンネルでjobを流しこむ。
 channel に入れる前に queue を取得すると持ったままブロックします
*/


type Job struct {
	id int
}
func (j *Job) Run() {
	fmt.Println("start", j.id, "....")
	time.Sleep(time.Second)
	fmt.Println(".....end", j.id)
}



func A(jobs chan Job) {
	sem := make(chan struct{}, 10)
	var wgrp sync.WaitGroup
	
	for {
		fmt.Println("read job.....")
		j, ok := <-jobs
		if !ok {
			fmt.Println("....read closed, break")
			break
		}
		fmt.Println(".....get job", j.id)

		fmt.Println("waiting.....")
		sem <- struct{}{}
		fmt.Println("......waiting done")

		wgrp.Add(1)
		go func(j Job) {
			defer wgrp.Done()
			j.Run()
			<-sem
		}(j)
	}
	fmt.Println("wgrp.Wait()")
	wgrp.Wait()
}

func main() {
	fmt.Println("start main")

	jobs := make(chan Job)

	go func() {
		for i:=1; i<=30; i++ {
			jobs <-Job{ i }
			time.Sleep(time.Millisecond * 10)
		}
		close(jobs)
	}()
	
	A(jobs)

	fmt.Println("end main")
}
// -*- mode: compilation; default-directory: "~/Desktop/work/go/practice/03anti-pattern/" -*-
// Compilation started at Mon Sep 27 16:55:09
//  
// go run patn07-2.go
// start main
// read job.....
// .....get job 1
// waiting.....
// ......waiting done
// read job.....
// start 1 ....
// .....get job 2
// waiting.....
// ......waiting done
// read job.....
// start 2 ....
// .....get job 3
// waiting.....
// ......waiting done
// read job.....
// start 3 ....
// .....get job 4
// waiting.....
// ......waiting done
// read job.....
// start 4 ....
// .....get job 5
// waiting.....
// ......waiting done
// read job.....
// start 5 ....
// .....get job 6
// waiting.....
// ......waiting done
// read job.....
// start 6 ....
// .....get job 7
// waiting.....
// ......waiting done
// read job.....
// start 7 ....
// .....get job 8
// waiting.....
// ......waiting done
// read job.....
// start 8 ....
// .....get job 9
// waiting.....
// ......waiting done
// start 9 ....
// read job.....
// .....get job 10
// waiting.....
// ......waiting done
// read job.....
// start 10 ....
// .....get job 11
// waiting.....
// .....end 1
// ......waiting done
// read job.....
// .....get job 12
// waiting.....
// start 11 ....
// .....end 2
// ......waiting done
// read job.....
// start 12 ....
// .....get job 13
// waiting.....
// .....end 3
// ......waiting done
// read job.....
// .....get job 14
// waiting.....
// start 13 ....
// .....end 4
// ......waiting done
// read job.....
// .....get job 15
// waiting.....
// start 14 ....
// .....end 5
// ......waiting done
// read job.....
// .....get job 16
// waiting.....
// start 15 ....
// .....end 6
// ......waiting done
// read job.....
// .....get job 17
// waiting.....
// start 16 ....
// .....end 7
// ......waiting done
// read job.....
// .....get job 18
// waiting.....
// start 17 ....
// .....end 8
// ......waiting done
// read job.....
// .....get job 19
// waiting.....
// start 18 ....
// .....end 9
// ......waiting done
// read job.....
// .....get job 20
// waiting.....
// start 19 ....
// .....end 10
// ......waiting done
// read job.....
// .....get job 21
// waiting.....
// start 20 ....
// .....end 11
// ......waiting done
// read job.....
// .....get job 22
// waiting.....
// start 21 ....
// .....end 12
// ......waiting done
// read job.....
// .....get job 23
// waiting.....
// start 22 ....
// .....end 13
// ......waiting done
// start 23 ....
// read job.....
// .....get job 24
// waiting.....
// .....end 14
// ......waiting done
// read job.....
// .....get job 25
// waiting.....
// start 24 ....
// .....end 15
// ......waiting done
// read job.....
// .....get job 26
// waiting.....
// start 25 ....
// .....end 16
// ......waiting done
// read job.....
// .....get job 27
// waiting.....
// start 26 ....
// .....end 17
// ......waiting done
// read job.....
// .....get job 28
// waiting.....
// start 27 ....
// .....end 18
// ......waiting done
// start 28 ....
// read job.....
// .....get job 29
// waiting.....
// .....end 19
// ......waiting done
// read job.....
// .....get job 30
// waiting.....
// start 29 ....
// .....end 20
// ......waiting done
// read job.....
// ....read closed, break
// wgrp.Wait()
// start 30 ....
// .....end 21
// .....end 22
// .....end 23
// .....end 24
// .....end 25
// .....end 26
// .....end 27
// .....end 28
// .....end 29
// .....end 30
// end main
//  
// Compilation finished at Mon Sep 27 16:55:13
